{"{\"assumptions\":{},\"sourceRoot\":\"/Users/steveadrienmonthemeudje/Desktop/hello_computing/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/steveadrienmonthemeudje/Desktop/hello_computing\",\"filename\":\"/Users/steveadrienmonthemeudje/Desktop/hello_computing/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/steveadrienmonthemeudje/Desktop/hello_computing\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.19.1:development":{"value":{"code":"\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\nvar geometricShapes = [\"triangle\", \"rectangle\", \"square\", \"circle\"];\nvar units = {\n  centimeter: {\n    unit: \"cm\"\n  },\n  decimeter: {\n    unit: \"dm\"\n  },\n  meter: {\n    unit: \"m\"\n  },\n  kilometer: {\n    unit: \"km\"\n  }\n};\napp.get(\"/api/shapes\", function (req, res) {\n  return res.send(\"Hello!\");\n});\napp.post(\"/api/:name/calc\", function (req, res) {\n  var geometricShape = req.params.name.toLowerCase();\n  var messageStatus = 200;\n  var message = \"\";\n  var data = {\n    perimeter: 0,\n    area: 0\n  };\n\n  switch (geometricShape) {\n    case \"triangle\":\n      var _req$body = req.body,\n          a = _req$body.a,\n          b = _req$body.b,\n          c = _req$body.c;\n\n      if (typeof a != \"number\" || typeof b != \"number\" || typeof c != \"number\") {\n        messageStatus = 400;\n        message = \"To calculate the perimeter or area of a \" + geometricShape + \" we need the side lenghts a,b and c, which should be numbers! verify your data\";\n      } else if (a <= 0 || b <= 0 || c <= 0) {\n        messageStatus = 400;\n        message = \"a, b and c must be positive numbers! verify your data\";\n      } else {\n        var trianglePerimeter = a + b + c;\n        var s = trianglePerimeter / 2;\n        var triangleArea = Math.sqrt(s * ((s - a) * (s - b) * (s - c)));\n        messageStatus = 200;\n        data = {\n          perimeter: trianglePerimeter,\n          area: triangleArea\n        };\n      }\n\n      break;\n\n    case \"rectangle\":\n    case \"square\":\n      var _req$body2 = req.body,\n          l = _req$body2.l,\n          w = _req$body2.w;\n\n      if (typeof l != \"number\" || typeof w != \"number\") {\n        messageStatus = 400;\n        message = \"To calculate the perimeter or area of a \" + geometricShape + \" we need the side lenghts l and w, which should be numbers! verify your data\";\n      } else if (l <= 0 || w <= 0) {\n        messageStatus = 400;\n        message = \"l and w must be positive numbers! verify your data\";\n      } else {\n        var rectanglePerimeter = (l + w) * 2;\n        var rectangleArea = l * w;\n        messageStatus = 200;\n        data = {\n          perimeter: rectanglePerimeter,\n          area: rectangleArea\n        };\n      }\n\n      break;\n\n    case \"circle\":\n      var r = req.body.r;\n\n      if (typeof r != \"number\") {\n        messageStatus = 400;\n        message = \"To calculate the perimeter or area of a \" + geometricShape + \" we need its radius, r, which should be a number! verify your data\";\n      } else if (r <= 0) {\n        messageStatus = 400;\n        message = \"the radius r must be a positive number! verify your data\";\n      } else {\n        var circlePerimeter = Math.PI * 2 * r;\n        var circleArea = Math.PI * r * r;\n        messageStatus = 200;\n        data = {\n          perimeter: circlePerimeter,\n          area: circleArea\n        };\n      }\n\n      break;\n\n    default:\n      messageStatus = 400;\n      message = geometricShape + \" is not recognized! use either triange, rectangle, cirle or square\";\n  }\n\n  if (messageStatus == 200) {\n    res.status(messageStatus).json(data);\n  } else {\n    res.status(messageStatus).send(message);\n  }\n});\napp.listen(8000, function () {\n  return console.log(\"Listening on port 8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcHAiLCJleHByZXNzIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJnZW9tZXRyaWNTaGFwZXMiLCJ1bml0cyIsImNlbnRpbWV0ZXIiLCJ1bml0IiwiZGVjaW1ldGVyIiwibWV0ZXIiLCJraWxvbWV0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwicG9zdCIsImdlb21ldHJpY1NoYXBlIiwicGFyYW1zIiwibmFtZSIsInRvTG93ZXJDYXNlIiwibWVzc2FnZVN0YXR1cyIsIm1lc3NhZ2UiLCJkYXRhIiwicGVyaW1ldGVyIiwiYXJlYSIsImJvZHkiLCJhIiwiYiIsImMiLCJ0cmlhbmdsZVBlcmltZXRlciIsInMiLCJ0cmlhbmdsZUFyZWEiLCJNYXRoIiwic3FydCIsImwiLCJ3IiwicmVjdGFuZ2xlUGVyaW1ldGVyIiwicmVjdGFuZ2xlQXJlYSIsInIiLCJjaXJjbGVQZXJpbWV0ZXIiLCJQSSIsImNpcmNsZUFyZWEiLCJzdGF0dXMiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvc3RldmVhZHJpZW5tb250aGVtZXVkamUvRGVza3RvcC9oZWxsb19jb21wdXRpbmcvc3JjLyIsInNvdXJjZXMiOlsic2VydmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIjtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuY29uc3QgZ2VvbWV0cmljU2hhcGVzID0gW1widHJpYW5nbGVcIiwgXCJyZWN0YW5nbGVcIiwgXCJzcXVhcmVcIiwgXCJjaXJjbGVcIl07XG5cbmNvbnN0IHVuaXRzID0ge1xuICBjZW50aW1ldGVyOiB7IHVuaXQ6IFwiY21cIiB9LFxuICBkZWNpbWV0ZXI6IHsgdW5pdDogXCJkbVwiIH0sXG4gIG1ldGVyOiB7IHVuaXQ6IFwibVwiIH0sXG4gIGtpbG9tZXRlcjogeyB1bml0OiBcImttXCIgfSxcbn07XG5cbmFwcC5nZXQoXCIvYXBpL3NoYXBlc1wiLCAocmVxLCByZXMpID0+IHJlcy5zZW5kKFwiSGVsbG8hXCIpKTtcblxuYXBwLnBvc3QoXCIvYXBpLzpuYW1lL2NhbGNcIiwgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IGdlb21ldHJpY1NoYXBlID0gcmVxLnBhcmFtcy5uYW1lLnRvTG93ZXJDYXNlKCk7XG4gIHZhciBtZXNzYWdlU3RhdHVzID0gMjAwO1xuICB2YXIgbWVzc2FnZSA9IFwiXCI7XG4gIHZhciBkYXRhID0ge1xuICAgIHBlcmltZXRlcjogMCxcbiAgICBhcmVhOiAwLFxuICB9O1xuXG4gIHN3aXRjaCAoZ2VvbWV0cmljU2hhcGUpIHtcbiAgICBjYXNlIFwidHJpYW5nbGVcIjpcbiAgICAgIGNvbnN0IHsgYSwgYiwgYyB9ID0gcmVxLmJvZHk7XG4gICAgICBpZiAoXG4gICAgICAgIHR5cGVvZiBhICE9IFwibnVtYmVyXCIgfHxcbiAgICAgICAgdHlwZW9mIGIgIT0gXCJudW1iZXJcIiB8fFxuICAgICAgICB0eXBlb2YgYyAhPSBcIm51bWJlclwiXG4gICAgICApIHtcbiAgICAgICAgbWVzc2FnZVN0YXR1cyA9IDQwMDtcbiAgICAgICAgbWVzc2FnZSA9XG4gICAgICAgICAgXCJUbyBjYWxjdWxhdGUgdGhlIHBlcmltZXRlciBvciBhcmVhIG9mIGEgXCIgK1xuICAgICAgICAgIGdlb21ldHJpY1NoYXBlICtcbiAgICAgICAgICBcIiB3ZSBuZWVkIHRoZSBzaWRlIGxlbmdodHMgYSxiIGFuZCBjLCB3aGljaCBzaG91bGQgYmUgbnVtYmVycyEgdmVyaWZ5IHlvdXIgZGF0YVwiO1xuICAgICAgfSBlbHNlIGlmIChhIDw9IDAgfHwgYiA8PSAwIHx8IGMgPD0gMCkge1xuICAgICAgICBtZXNzYWdlU3RhdHVzID0gNDAwO1xuICAgICAgICBtZXNzYWdlID0gXCJhLCBiIGFuZCBjIG11c3QgYmUgcG9zaXRpdmUgbnVtYmVycyEgdmVyaWZ5IHlvdXIgZGF0YVwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGV0IHRyaWFuZ2xlUGVyaW1ldGVyID0gYSArIGIgKyBjO1xuICAgICAgICBsZXQgcyA9IHRyaWFuZ2xlUGVyaW1ldGVyIC8gMjtcbiAgICAgICAgbGV0IHRyaWFuZ2xlQXJlYSA9IE1hdGguc3FydChzICogKChzIC0gYSkgKiAocyAtIGIpICogKHMgLSBjKSkpO1xuICAgICAgICBtZXNzYWdlU3RhdHVzID0gMjAwO1xuICAgICAgICBkYXRhID0geyBwZXJpbWV0ZXI6IHRyaWFuZ2xlUGVyaW1ldGVyLCBhcmVhOiB0cmlhbmdsZUFyZWEgfTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJyZWN0YW5nbGVcIjpcbiAgICBjYXNlIFwic3F1YXJlXCI6XG4gICAgICBjb25zdCB7IGwsIHcgfSA9IHJlcS5ib2R5O1xuICAgICAgaWYgKHR5cGVvZiBsICE9IFwibnVtYmVyXCIgfHwgdHlwZW9mIHcgIT0gXCJudW1iZXJcIikge1xuICAgICAgICBtZXNzYWdlU3RhdHVzID0gNDAwO1xuICAgICAgICBtZXNzYWdlID1cbiAgICAgICAgICBcIlRvIGNhbGN1bGF0ZSB0aGUgcGVyaW1ldGVyIG9yIGFyZWEgb2YgYSBcIiArXG4gICAgICAgICAgZ2VvbWV0cmljU2hhcGUgK1xuICAgICAgICAgIFwiIHdlIG5lZWQgdGhlIHNpZGUgbGVuZ2h0cyBsIGFuZCB3LCB3aGljaCBzaG91bGQgYmUgbnVtYmVycyEgdmVyaWZ5IHlvdXIgZGF0YVwiO1xuICAgICAgfSBlbHNlIGlmIChsIDw9IDAgfHwgdyA8PSAwKSB7XG4gICAgICAgIG1lc3NhZ2VTdGF0dXMgPSA0MDA7XG4gICAgICAgIG1lc3NhZ2UgPSBcImwgYW5kIHcgbXVzdCBiZSBwb3NpdGl2ZSBudW1iZXJzISB2ZXJpZnkgeW91ciBkYXRhXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgcmVjdGFuZ2xlUGVyaW1ldGVyID0gKGwgKyB3KSAqIDI7XG4gICAgICAgIGxldCByZWN0YW5nbGVBcmVhID0gbCAqIHc7XG4gICAgICAgIG1lc3NhZ2VTdGF0dXMgPSAyMDA7XG4gICAgICAgIGRhdGEgPSB7IHBlcmltZXRlcjogcmVjdGFuZ2xlUGVyaW1ldGVyLCBhcmVhOiByZWN0YW5nbGVBcmVhIH07XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiY2lyY2xlXCI6XG4gICAgICBjb25zdCB7IHIgfSA9IHJlcS5ib2R5O1xuICAgICAgaWYgKHR5cGVvZiByICE9IFwibnVtYmVyXCIgKSB7XG4gICAgICAgIG1lc3NhZ2VTdGF0dXMgPSA0MDA7XG4gICAgICAgIG1lc3NhZ2UgPVxuICAgICAgICAgIFwiVG8gY2FsY3VsYXRlIHRoZSBwZXJpbWV0ZXIgb3IgYXJlYSBvZiBhIFwiICtcbiAgICAgICAgICBnZW9tZXRyaWNTaGFwZSArXG4gICAgICAgICAgXCIgd2UgbmVlZCBpdHMgcmFkaXVzLCByLCB3aGljaCBzaG91bGQgYmUgYSBudW1iZXIhIHZlcmlmeSB5b3VyIGRhdGFcIjtcbiAgICAgIH0gZWxzZSBpZiAociA8PSAwKSB7XG4gICAgICAgIG1lc3NhZ2VTdGF0dXMgPSA0MDA7XG4gICAgICAgIG1lc3NhZ2UgPSBcInRoZSByYWRpdXMgciBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyISB2ZXJpZnkgeW91ciBkYXRhXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgY2lyY2xlUGVyaW1ldGVyID0gTWF0aC5QSSAqIDIgKiByO1xuICAgICAgICBsZXQgY2lyY2xlQXJlYSA9IE1hdGguUEkgKiByICogcjtcbiAgICAgICAgbWVzc2FnZVN0YXR1cyA9IDIwMDtcbiAgICAgICAgZGF0YSA9IHsgcGVyaW1ldGVyOiBjaXJjbGVQZXJpbWV0ZXIsIGFyZWE6IGNpcmNsZUFyZWEgfTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBtZXNzYWdlU3RhdHVzID0gNDAwO1xuICAgICAgbWVzc2FnZSA9XG4gICAgICAgIGdlb21ldHJpY1NoYXBlICtcbiAgICAgICAgXCIgaXMgbm90IHJlY29nbml6ZWQhIHVzZSBlaXRoZXIgdHJpYW5nZSwgcmVjdGFuZ2xlLCBjaXJsZSBvciBzcXVhcmVcIjtcbiAgfVxuICBpZiAobWVzc2FnZVN0YXR1cyA9PSAyMDApIHtcbiAgICByZXMuc3RhdHVzKG1lc3NhZ2VTdGF0dXMpLmpzb24oZGF0YSk7XG4gIH0gZWxzZSB7XG4gICAgcmVzLnN0YXR1cyhtZXNzYWdlU3RhdHVzKS5zZW5kKG1lc3NhZ2UpO1xuICB9XG59KTtcblxuYXBwLmxpc3Rlbig4MDAwLCAoKSA9PiBjb25zb2xlLmxvZyhcIkxpc3RlbmluZyBvbiBwb3J0IDgwMDBcIikpO1xuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLElBQUFDLG1CQUFBLEdBQVo7QUFFQUQsR0FBRyxDQUFDRSxHQUFKLENBQVFDLHNCQUFBLENBQVdDLElBQVgsRUFBUjtBQUVBLElBQU1DLGVBQWUsR0FBRyxDQUFDLFVBQUQsRUFBYSxXQUFiLEVBQTBCLFFBQTFCLEVBQW9DLFFBQXBDLENBQXhCO0FBRUEsSUFBTUMsS0FBSyxHQUFHO0VBQ1pDLFVBQVUsRUFBRTtJQUFFQyxJQUFJLEVBQUU7RUFBUixDQURBO0VBRVpDLFNBQVMsRUFBRTtJQUFFRCxJQUFJLEVBQUU7RUFBUixDQUZDO0VBR1pFLEtBQUssRUFBRTtJQUFFRixJQUFJLEVBQUU7RUFBUixDQUhLO0VBSVpHLFNBQVMsRUFBRTtJQUFFSCxJQUFJLEVBQUU7RUFBUjtBQUpDLENBQWQ7QUFPQVIsR0FBRyxDQUFDWSxHQUFKLENBQVEsYUFBUixFQUF1QixVQUFDQyxHQUFELEVBQU1DLEdBQU47RUFBQSxPQUFjQSxHQUFHLENBQUNDLElBQUosQ0FBUyxRQUFULENBQWQ7QUFBQSxDQUF2QjtBQUVBZixHQUFHLENBQUNnQixJQUFKLENBQVMsaUJBQVQsRUFBNEIsVUFBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7RUFDeEMsSUFBTUcsY0FBYyxHQUFH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","map":{"version":3,"names":["app","express","use","bodyParser","json","geometricShapes","units","centimeter","unit","decimeter","meter","kilometer","get","req","res","send","post","geometricShape","params","name","toLowerCase","messageStatus","message","data","perimeter","area","body","a","b","c","trianglePerimeter","s","triangleArea","Math","sqrt","l","w","rectanglePerimeter","rectangleArea","r","circlePerimeter","PI","circleArea","status","listen","console","log"],"sourceRoot":"/Users/steveadrienmonthemeudje/Desktop/hello_computing/src/","sources":["server.js"],"sourcesContent":["import express from \"express\";\nimport bodyParser from \"body-parser\";\n\nconst app = express();\n\napp.use(bodyParser.json());\n\nconst geometricShapes = [\"triangle\", \"rectangle\", \"square\", \"circle\"];\n\nconst units = {\n  centimeter: { unit: \"cm\" },\n  decimeter: { unit: \"dm\" },\n  meter: { unit: \"m\" },\n  kilometer: { unit: \"km\" },\n};\n\napp.get(\"/api/shapes\", (req, res) => res.send(\"Hello!\"));\n\napp.post(\"/api/:name/calc\", (req, res) => {\n  const geometricShape = req.params.name.toLowerCase();\n  var messageStatus = 200;\n  var message = \"\";\n  var data = {\n    perimeter: 0,\n    area: 0,\n  };\n\n  switch (geometricShape) {\n    case \"triangle\":\n      const { a, b, c } = req.body;\n      if (\n        typeof a != \"number\" ||\n        typeof b != \"number\" ||\n        typeof c != \"number\"\n      ) {\n        messageStatus = 400;\n        message =\n          \"To calculate the perimeter or area of a \" +\n          geometricShape +\n          \" we need the side lenghts a,b and c, which should be numbers! verify your data\";\n      } else if (a <= 0 || b <= 0 || c <= 0) {\n        messageStatus = 400;\n        message = \"a, b and c must be positive numbers! verify your data\";\n      } else {\n        let trianglePerimeter = a + b + c;\n        let s = trianglePerimeter / 2;\n        let triangleArea = Math.sqrt(s * ((s - a) * (s - b) * (s - c)));\n        messageStatus = 200;\n        data = { perimeter: trianglePerimeter, area: triangleArea };\n      }\n      break;\n    case \"rectangle\":\n    case \"square\":\n      const { l, w } = req.body;\n      if (typeof l != \"number\" || typeof w != \"number\") {\n        messageStatus = 400;\n        message =\n          \"To calculate the perimeter or area of a \" +\n          geometricShape +\n          \" we need the side lenghts l and w, which should be numbers! verify your data\";\n      } else if (l <= 0 || w <= 0) {\n        messageStatus = 400;\n        message = \"l and w must be positive numbers! verify your data\";\n      } else {\n        let rectanglePerimeter = (l + w) * 2;\n        let rectangleArea = l * w;\n        messageStatus = 200;\n        data = { perimeter: rectanglePerimeter, area: rectangleArea };\n      }\n      break;\n    case \"circle\":\n      const { r } = req.body;\n      if (typeof r != \"number\" ) {\n        messageStatus = 400;\n        message =\n          \"To calculate the perimeter or area of a \" +\n          geometricShape +\n          \" we need its radius, r, which should be a number! verify your data\";\n      } else if (r <= 0) {\n        messageStatus = 400;\n        message = \"the radius r must be a positive number! verify your data\";\n      } else {\n        let circlePerimeter = Math.PI * 2 * r;\n        let circleArea = Math.PI * r * r;\n        messageStatus = 200;\n        data = { perimeter: circlePerimeter, area: circleArea };\n      }\n      break;\n    default:\n      messageStatus = 400;\n      message =\n        geometricShape +\n        \" is not recognized! use either triange, rectangle, cirle or square\";\n  }\n  if (messageStatus == 200) {\n    res.status(messageStatus).json(data);\n  } else {\n    res.status(messageStatus).send(message);\n  }\n});\n\napp.listen(8000, () => console.log(\"Listening on port 8000\"));\n"],"mappings":"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"}},"mtime":1664144006104},"{\"assumptions\":{},\"sourceRoot\":\"/Users/steveadrienmonthemeudje/Desktop/hello_computing/backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/steveadrienmonthemeudje/Desktop/hello_computing/backend\",\"filename\":\"/Users/steveadrienmonthemeudje/Desktop/hello_computing/backend/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/steveadrienmonthemeudje/Desktop/hello_computing/backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.19.1:development":{"value":{"code":"\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\nvar geometricShapes = [\"triangle\", \"rectangle\", \"square\", \"circle\"];\nvar units = {\n  centimeter: {\n    unit: \"cm\"\n  },\n  decimeter: {\n    unit: \"dm\"\n  },\n  meter: {\n    unit: \"m\"\n  },\n  kilometer: {\n    unit: \"km\"\n  }\n};\napp.get(\"/api/shapes\", function (req, res) {\n  return res.send(\"Hello!\");\n});\napp.post(\"/api/:name/calc\", function (req, res) {\n  var geometricShape = req.params.name.toLowerCase();\n  var messageStatus = 200;\n  var message = \"\";\n  var data = {\n    perimeter: 0,\n    area: 0\n  };\n\n  switch (geometricShape) {\n    case \"triangle\":\n      var _req$body = req.body,\n          a = _req$body.a,\n          b = _req$body.b,\n          c = _req$body.c;\n\n      if (typeof a != \"number\" || typeof b != \"number\" || typeof c != \"number\") {\n        messageStatus = 400;\n        message = \"To calculate the perimeter or area of a \" + geometricShape + \" we need the side lenghts a,b and c, which should be numbers! verify your data\";\n      } else if (a <= 0 || b <= 0 || c <= 0) {\n        messageStatus = 400;\n        message = \"a, b and c must be positive numbers! verify your data\";\n      } else {\n        var trianglePerimeter = a + b + c;\n        var s = trianglePerimeter / 2;\n        var triangleArea = Math.sqrt(s * ((s - a) * (s - b) * (s - c)));\n        messageStatus = 200;\n        data = {\n          perimeter: trianglePerimeter,\n          area: triangleArea\n        };\n      }\n\n      break;\n\n    case \"rectangle\":\n    case \"square\":\n      var _req$body2 = req.body,\n          l = _req$body2.l,\n          w = _req$body2.w;\n\n      if (typeof l != \"number\" || typeof w != \"number\") {\n        messageStatus = 400;\n        message = \"To calculate the perimeter or area of a \" + geometricShape + \" we need the side lenghts l and w, which should be numbers! verify your data\";\n      } else if (l <= 0 || w <= 0) {\n        messageStatus = 400;\n        message = \"l and w must be positive numbers! verify your data\";\n      } else {\n        var rectanglePerimeter = (l + w) * 2;\n        var rectangleArea = l * w;\n        messageStatus = 200;\n        data = {\n          perimeter: rectanglePerimeter,\n          area: rectangleArea\n        };\n      }\n\n      break;\n\n    case \"circle\":\n      var r = req.body.r;\n\n      if (typeof r != \"number\") {\n        messageStatus = 400;\n        message = \"To calculate the perimeter or area of a \" + geometricShape + \" we need its radius, r, which should be a number! verify your data\";\n      } else if (r <= 0) {\n        messageStatus = 400;\n        message = \"the radius r must be a positive number! verify your data\";\n      } else {\n        var circlePerimeter = Math.PI * 2 * r;\n        var circleArea = Math.PI * r * r;\n        messageStatus = 200;\n        data = {\n          perimeter: circlePerimeter,\n          area: circleArea\n        };\n      }\n\n      break;\n\n    default:\n      messageStatus = 400;\n      message = geometricShape + \" is not recognized! use either triange, rectangle, cirle or square\";\n  }\n\n  if (messageStatus == 200) {\n    res.status(messageStatus).json(data);\n  } else {\n    res.status(messageStatus).send(message);\n  }\n});\napp.listen(8000, function () {\n  return console.log(\"Listening on port 8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["app","express","use","bodyParser","json","geometricShapes","units","centimeter","unit","decimeter","meter","kilometer","get","req","res","send","post","geometricShape","params","name","toLowerCase","messageStatus","message","data","perimeter","area","body","a","b","c","trianglePerimeter","s","triangleArea","Math","sqrt","l","w","rectanglePerimeter","rectangleArea","r","circlePerimeter","PI","circleArea","status","listen","console","log"],"sourceRoot":"/Users/steveadrienmonthemeudje/Desktop/hello_computing/backend/src/","sources":["server.js"],"sourcesContent":["import express from \"express\";\nimport bodyParser from \"body-parser\";\n\nconst app = express();\n\napp.use(bodyParser.json());\n\nconst geometricShapes = [\"triangle\", \"rectangle\", \"square\", \"circle\"];\n\nconst units = {\n  centimeter: { unit: \"cm\" },\n  decimeter: { unit: \"dm\" },\n  meter: { unit: \"m\" },\n  kilometer: { unit: \"km\" },\n};\n\napp.get(\"/api/shapes\", (req, res) => res.send(\"Hello!\"));\n\napp.post(\"/api/:name/calc\", (req, res) => {\n  const geometricShape = req.params.name.toLowerCase();\n  var messageStatus = 200;\n  var message = \"\";\n  var data = {\n    perimeter: 0,\n    area: 0,\n  };\n\n  switch (geometricShape) {\n    case \"triangle\":\n      const { a, b, c } = req.body;\n      if (\n        typeof a != \"number\" ||\n        typeof b != \"number\" ||\n        typeof c != \"number\"\n      ) {\n        messageStatus = 400;\n        message =\n          \"To calculate the perimeter or area of a \" +\n          geometricShape +\n          \" we need the side lenghts a,b and c, which should be numbers! verify your data\";\n      } else if (a <= 0 || b <= 0 || c <= 0) {\n        messageStatus = 400;\n        message = \"a, b and c must be positive numbers! verify your data\";\n      } else {\n        let trianglePerimeter = a + b + c;\n        let s = trianglePerimeter / 2;\n        let triangleArea = Math.sqrt(s * ((s - a) * (s - b) * (s - c)));\n        messageStatus = 200;\n        data = { perimeter: trianglePerimeter, area: triangleArea };\n      }\n      break;\n    case \"rectangle\":\n    case \"square\":\n      const { l, w } = req.body;\n      if (typeof l != \"number\" || typeof w != \"number\") {\n        messageStatus = 400;\n        message =\n          \"To calculate the perimeter or area of a \" +\n          geometricShape +\n          \" we need the side lenghts l and w, which should be numbers! verify your data\";\n      } else if (l <= 0 || w <= 0) {\n        messageStatus = 400;\n        message = \"l and w must be positive numbers! verify your data\";\n      } else {\n        let rectanglePerimeter = (l + w) * 2;\n        let rectangleArea = l * w;\n        messageStatus = 200;\n        data = { perimeter: rectanglePerimeter, area: rectangleArea };\n      }\n      break;\n    case \"circle\":\n      const { r } = req.body;\n      if (typeof r != \"number\" ) {\n        messageStatus = 400;\n        message =\n          \"To calculate the perimeter or area of a \" +\n          geometricShape +\n          \" we need its radius, r, which should be a number! verify your data\";\n      } else if (r <= 0) {\n        messageStatus = 400;\n        message = \"the radius r must be a positive number! verify your data\";\n      } else {\n        let circlePerimeter = Math.PI * 2 * r;\n        let circleArea = Math.PI * r * r;\n        messageStatus = 200;\n        data = { perimeter: circlePerimeter, area: circleArea };\n      }\n      break;\n    default:\n      messageStatus = 400;\n      message =\n        geometricShape +\n        \" is not recognized! use either triange, rectangle, cirle or square\";\n  }\n  if (messageStatus == 200) {\n    res.status(messageStatus).json(data);\n  } else {\n    res.status(messageStatus).send(message);\n  }\n});\n\napp.listen(8000, () => console.log(\"Listening on port 8000\"));\n"],"mappings":"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"}},"mtime":1664144006104}}